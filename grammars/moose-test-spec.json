{
  "scopeName": "tests.moose",
  "fileTypes": [
    "tests"
  ],
  "foldingStartMarker": "(^\\s*\\[[^.]+\\]\\s*$)",
  "foldingStopMarker": "(^\\s*\\[\\]\\s*$)",
  "name": "MOOSE Tests File",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "match": "(\\[)(Tests)(\\])",
      "captures": {
        "2": {
          "name": "keyword.control.moose"
        }
      }
    },
    {
      "match": "(\\[)(\\.\\/[^]./]+)(\\])",
      "captures": {
        "2": {
          "name": "support.function.moose"
        }
      }
    },
    {
      "match": "\\b(type)\\s*(=)\\s*(AnalyzeJacobian|CSVDiff|CSVValidationTester|CheckFiles|Exodiff|FileTester|ImageDiff|JSONDiff|PetscJacobianTester|PythonUnitTest|QueueManager|RunApp|RunCommand|RunException|RunPBS|RunParallel|Scheduler|SpeedTest|Tester|XMLDiff)",
      "captures": {
        "1": {
          "name": "keyword.control.moose"
        },
        "2": {
          "name": "keyword.operator.moose"
        },
        "3": {
          "name": "entity.name.function.moose"
        }
      }
    },
    {
      "match": "\\b(type)\\s*(=)\\s*'(AnalyzeJacobian|CSVDiff|CSVValidationTester|CheckFiles|Exodiff|FileTester|ImageDiff|JSONDiff|PetscJacobianTester|PythonUnitTest|QueueManager|RunApp|RunCommand|RunException|RunPBS|RunParallel|Scheduler|SpeedTest|Tester|XMLDiff)'",
      "captures": {
        "1": {
          "name": "keyword.control.moose"
        },
        "2": {
          "name": "keyword.operator.moose"
        },
        "3": {
          "name": "entity.name.function.moose"
        }
      }
    },
    {
      "match": "\\b(input|csvdiff|exodiff|imagediff|jsondiff|xmldiff)\\s*(=)\\s*(.*)",
      "captures": {
        "1": {
          "name": "keyword.control.moose"
        },
        "2": {
          "name": "keyword.operator.moose"
        },
        "3": {
          "name": "constant.other.filename.moose"
        }
      }
    },
    {
      "match": "\\b(cli_args|skip|deleted|unique_test_id|expect_err|expect_out|heavy|group|valgrind|tags|max_buffer_size|parallel_scheduling|platform|machine|compiler|petsc_version|petsc_version_release|slepc_version|exodus_version|vtk_version|min_ad_size|max_ad_size|method|library_mode|dtk|unique_ids|tecplot|dof_id_bytes|petsc_debug|curl|threading|superlu|mumps|strumpack|chaco|parmetis|party|ptscotch|slepc|unique_id|cxx11|asio|fparser_jit|libpng|libtorch|libtorch_version|installation_type|depend_files|env_vars|env_vars_not_set|should_execute|required_submodule|required_objects|required_applications|check_input|display_required|timing|boost|python|required_python_packages|requires|working_directory|recover|vtk|design|requirement|issues|detail|validation|verification|deprecated|collections|classification|min_parallel|max_parallel|max_time|mesh_mode|allow_warnings|allow_unused|allow_test_objects|prereq|skip_checks|recover|scale_refine|success_message|custom_cmp|rel_err|abs_zero)\\s*(=)\\s*(.*)",
      "captures": {
        "1": {
          "name": "keyword.control.moose"
        },
        "2": {
          "name": "keyword.operator.moose"
        },
        "3": {
          "name": "string.quoted.moose"
        }
      }
    },
    {
      "match": "\\[(\\.+/)\\]",
      "captures": {
        "1": {
          "name": "moose"
        }
      }
    },
    {
      "match": "\\[\\]",
      "captures": {
        "1": {
          "name": "moose"
        }
      }
    },
    {
      "begin": "[a-z_A-Z0-9]+\\s*(=)\\s*(')",
      "beginCaptures": {
        "1": {
          "name": "keyword.operator.assignment.moose"
        },
        "2": {
          "name": "punctuation.definition.string.begin.moose"
        }
      },
      "end": "'",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.moose"
        }
      },
      "patterns": [
        {
          "include": "#numbers"
        }
      ]
    },
    {
      "begin": "[a-z_A-Z0-9]+\\s*(=)\\s*",
      "beginCaptures": {
        "1": {
          "name": "keyword.operator.assignment.moose"
        }
      },
      "end": "\n",
      "patterns": [
        {
          "include": "#constants"
        },
        {
          "include": "#numbers"
        },
        {
          "include": "#comments"
        }
      ]
    }
  ],
  "repository": {
    "numbers": {
      "patterns": [
        {
          "match": "\\b(\\d*\\.\\d+)\\b",
          "captures": {
            "1": {
              "name": "constant.numeric.moose"
            }
          }
        },
        {
          "match": "\\b(\\d+e[+-]{0,1}\\d+)\\b",
          "captures": {
            "1": {
              "name": "constant.numeric.moose"
            }
          }
        },
        {
          "match": "\\b(\\d*\\.\\d+e[+-]{0,1}\\d+)\\b",
          "captures": {
            "1": {
              "name": "constant.numeric.moose"
            }
          }
        },
        {
          "match": "\\b(\\d+)\\b",
          "captures": {
            "1": {
              "name": "constant.numeric.moose"
            }
          }
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "match": "(?i)\\b([Ff]alse|[Tt]rue)\\b",
          "name": "constant.language.moose"
        }
      ]
    },
    "escaped_char": {
      "patterns": [
        {
          "match": "\\\\.",
          "name": "constant.character.escape.moose"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "match": "^\\s*((#+).*)",
          "captures": {
            "1": {
              "name": "punctuation.definition.comment.moose"
            },
            "2": {
              "name": "comment.line.number-sign.moose"
            }
          }
        },
        {
          "match": "((#+).*)",
          "captures": {
            "1": {
              "name": "punctuation.definition.comment.moose"
            },
            "2": {
              "name": "comment.line.number-sign.moose"
            }
          }
        }
      ]
    }
  }
}
